install.packages("devtools")
library(devtools)
install_github("slidify","ramnathv")
install_github("sLidifyLibraries","ramnathv")
??kernlab
install.packages("kernlab")
library(kernlab)
data(spam)
dim(spam)
str(spam)
set.seed(3435)
trainIndicator = rbinom(4601,size=1,prob=0.5)
table(trainIndicator)
trainSPam = spam[trainIndicator==1,]
testSPam = spam[trainIndicator==0,]
str(trainSpam)
trainSpam = spam[trainIndicator==1,]
testSpam = spam[trainIndicator==0,]
named(trainSpam)
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
??md5
x -> c(123,234,566)
x <- c(123,234,566)
md5(x)
??digest
digest(x,algo="md5")
?digest
??digest
library(digest)
digest(x,algo="md5")
?date
date()
as.POSIXct(date())
x <- date()
as.POSIXct(x)
par(mfrow=c(1,2))
hist(satisfaction_cleaned$Rating,ylab="Responses",xlab="Score",labels=F,col="blue",border="white",main="Score Distribution")
satisfaction_cleaned <- subset(satisfaction_raw,subset=satisfaction_raw$Date != "2013-11-19")
satisfaction_raw <- read.csv(file=file.choose(),header=T)
satisfaction_cleaned <- subset(satisfaction_raw,subset=satisfaction_raw$Date != "2013-11-19")
satisfaction_cleaned$Date <- factor(satisfaction_cleaned$Date)
satisfaction_cleaned$Date <- strptime(satisfaction_cleaned$Date,format="%Y-%m-%d")
hist(satisfaction_cleaned$Rating,ylab="Responses",xlab="Score",labels=F,col="blue",border="white",main="Score Distribution")
text_height <- round(nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating == 10))*.75)
text(4,text_height, paste("Overall NPS - ",nps_score,"%\nTotal Responses - ",as.character(nrow(satisfaction_cleaned)),sep=""))
percent_promoters <- nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating>=9))/nrow(satisfaction_cleaned)*100
percent_detractors <- nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating<=6))/nrow(satisfaction_cleaned)*100
nps_score <- round(percent_promoters - percent_detractors,0)
text(4,text_height, paste("Overall NPS - ",nps_score,"%\nTotal Responses - ",as.character(nrow(satisfaction_cleaned)),sep=""))
app_sat_raw <- read.csv(file=file.choose(),header=T)
hist(satisfaction_cleaned$Date,breaks=unique(satisfaction_cleaned$Date))
setwd("~/R/NPS") #set working directory to the folder w/ the NPS data in it
satisfaction_raw <- read.csv(file=file.choose(),header=T) # load data
satisfaction_cleaned <- subset(satisfaction_raw,subset=satisfaction_raw$Date != "2013-11-19") #remove partial days
satisfaction_cleaned$Date <- factor(satisfaction_cleaned$Date) # remove unused factors
satisfaction_cleaned$Date <- strptime(satisfaction_cleaned$Date,format="%Y-%m-%d") # convert date
hist(satisfaction_cleaned$Rating,ylab="Responses",xlab="Score",labels=F,col="blue",border="white",main="Score Distribution")
text_height <- round(nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating == 10))*.75)
text(4,text_height, paste("Overall NPS - ",nps_score,"%\nTotal Responses - ",as.character(nrow(satisfaction_cleaned)),sep=""))
percent_promoters <- nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating>=9))/nrow(satisfaction_cleaned)*100 ; percent_detractors <- nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating<=6))/nrow(satisfaction_cleaned)*100
percent_promoters <- nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating>=9))/nrow(satisfaction_cleaned)*100 ; percent_detractors <- nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating<=6))/nrow(satisfaction_cleaned)*100 ; nps_score <- round(percent_promoters - percent_detractors,0)
setwd("~/R/NPS") #set working directory to the folder w/ the NPS data in it
satisfaction_raw <- read.csv(file=file.choose(),header=T) # load data
satisfaction_cleaned <- subset(satisfaction_raw,subset=satisfaction_raw$Date != "2013-11-19") #remove partial days
satisfaction_cleaned$Date <- factor(satisfaction_cleaned$Date) # remove unused factors
satisfaction_cleaned$Date <- strptime(satisfaction_cleaned$Date,format="%Y-%m-%d") # convert date
percent_promoters <- nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating>=9))/nrow(satisfaction_cleaned)*100 ; percent_detractors <- nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating<=6))/nrow(satisfaction_cleaned)*100 ; nps_score <- round(percent_promoters - percent_detractors,0)
hist(satisfaction_cleaned$Rating,ylab="Responses",xlab="Score",labels=F,col="blue",border="white",main="Score Distribution")
text_height <- round(nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating == 10))*.75)
text(4,text_height, paste("Overall NPS - ",nps_score,"%\nTotal Responses - ",as.character(nrow(satisfaction_cleaned)),sep=""))
app_sat_raw <- read.csv(file=file.choose(),header=T)
# str(app_sat_raw)
# hist(app_sat_raw)
all_app_responders <- sum(app_sat_raw$X0,app_sat_raw$X1,app_sat_raw$X2,app_sat_raw$X3,app_sat_raw$X4,app_sat_raw$X5)
app_promoters <- sum(app_sat_raw$X5)
app_detractors <- sum(app_sat_raw$X3,app_sat_raw$X2,app_sat_raw$X1,app_sat_raw$X0)
percent_app_promoters <- (app_promoters / all_app_responders)*100
percent_app_detractors <- (app_detractors / all_app_responders)*100
app_nps <- round((percent_app_promoters - percent_app_detractors))
paste("App NPS is ",app_nps,"%",sep="")
hist(satisfaction_cleaned$Rating,ylab="Responses",xlab="Score",labels=F,col="blue",border="white",main="Score Distribution")
text_height <- round(nrow(subset(satisfaction_cleaned,subset=satisfaction_cleaned$Rating == 10))*.75)
text(4,text_height, paste("Web App NPS - ",nps_score,"%\nTotal Responses - ",as.character(nrow(satisfaction_cleaned)),sep=""))
