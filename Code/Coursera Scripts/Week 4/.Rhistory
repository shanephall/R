install.packages("devtools")
library(devtools)
install_github("slidify","ramnathv")
install_github("sLidifyLibraries","ramnathv")
??kernlab
install.packages("kernlab")
library(kernlab)
data(spam)
dim(spam)
str(spam)
set.seed(3435)
trainIndicator = rbinom(4601,size=1,prob=0.5)
table(trainIndicator)
trainSPam = spam[trainIndicator==1,]
testSPam = spam[trainIndicator==0,]
str(trainSpam)
trainSpam = spam[trainIndicator==1,]
testSpam = spam[trainIndicator==0,]
named(trainSpam)
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
??md5
x -> c(123,234,566)
x <- c(123,234,566)
md5(x)
??digest
digest(x,algo="md5")
?digest
??digest
library(digest)
digest(x,algo="md5")
?date
date()
as.POSIXct(date())
x <- date()
as.POSIXct(x)
download.file("https://dl.dropbox.com/u/7710864/courseraPublic/samsungData.rda",destfile="./data/samsungData.rda",method="curl")load("./data/samsungData.rda")
names(samsungData)[1:12]
download.file("https://dl.dropbox.com/u/7710864/courseraPublic/samsungData.rda",destfile="./data/samsungData.rda",method="curl")
download.file("https://dl.dropbox.com/u/7710864/courseraPublic/samsungData.rda,destfile="./data/samsungData.rda",method="curl")
download.file("https://dl.dropbox.com/u/7710864/courseraPublic/samsungData.rda",destfile="./data/samsungData.rda",method="curl")
setwd("~/R/Week 4")
download.file("https://dl.dropbox.com/u/7710864/courseraPublic/samsungData.rda",destfile="./samsungData.rda",method="curl")
load("./data/samsungData.rda")
load("./samsungData.rda")
load("~/R/Week 4/samsungData.rda")
download.file("https://dl.dropbox.com/u/7710864/courseraPublic/samsungData.rda",destfile="./samsungData.rda",method="curl")
load("~/R/Week 4/samsungData.rda")
download.file(url="https://spark-public.s3.amazonaws.com/dataanalysis/movies.txt",destfile="./movies.txt", method="curl")
movies <- read.table("./movies.txt", header=T,sep="/t",quote="")
movies <- read.table("./movies.txt", header=T,sep="\t",quote="")
head(movies)
lml <- lm(movies$score ~ as.factpr(movies$rating))
summary(lml)
lml <- lm(movies$score ~ as.factor(movies$rating))
summary(lml)
head(movies)
lml <- lm(movies$score ~ movies$box.office)
summary(lml)
plot(movies$score,movies$box.office,pch=19,col="blue")
plot(movies$box.office,movies$score,pch=19,col="blue")
lines(movies$box.office,lm1$fitted,col="red",lwd=3)
lm1 <- lm(movies$score ~ movies$box.office)
lines(movies$box.office,lm1$fitted,col="red",lwd=3)
summary(lm1)
lm(formula = movies$score ~ movies$box.office)
confint(lm1, level=0.90)
confint(lm1)
confint(lm1, level=0.90)
head(movies)
lmBoth <- lm(movies$score ~ movies$box.office + movies$running.time)
summary(lmBoth)
anova(lm(movies$score ~ movies$running.time))
anova(lm(movies$score ~ movies$box.office))
head(movies)
plot(movies$running.time ~ movies$score)
max(movies$running.time)
boxplot(movies$running.time ~ movies$score)
summary(movies$running.time)
movies_sub <- subset(movies, running.time<200)
summary(movies_sub)
movies_sub <- subset(movies, running.time<160)
summary(movies_sub)
lmBoth_sub <- lm(movies_sub$score ~ movies_sub$box.office + movies_sub$running.time)
summary(lmBoth_sub)
summary(lmBoth)
lm1 <- lm(movies$score ~ movies$box.office)
summary(lm1)
